# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class Assignproj(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, users: List[int]=None, proj: int=None):  # noqa: E501
        """Assignproj - a model defined in Swagger

        :param users: The users of this Assignproj.  # noqa: E501
        :type users: List[int]
        :param proj: The proj of this Assignproj.  # noqa: E501
        :type proj: int
        """
        self.swagger_types = {
            'users': List[int],
            'proj': int
        }

        self.attribute_map = {
            'users': 'users',
            'proj': 'proj'
        }

        self._users = users
        self._proj = proj

    @classmethod
    def from_dict(cls, dikt) -> 'Assignproj':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The assignproj of this Assignproj.  # noqa: E501
        :rtype: Assignproj
        """
        return util.deserialize_model(dikt, cls)

    @property
    def users(self) -> List[int]:
        """Gets the users of this Assignproj.


        :return: The users of this Assignproj.
        :rtype: List[int]
        """
        return self._users

    @users.setter
    def users(self, users: List[int]):
        """Sets the users of this Assignproj.


        :param users: The users of this Assignproj.
        :type users: List[int]
        """

        self._users = users

    @property
    def proj(self) -> int:
        """Gets the proj of this Assignproj.


        :return: The proj of this Assignproj.
        :rtype: int
        """
        return self._proj

    @proj.setter
    def proj(self, proj: int):
        """Sets the proj of this Assignproj.


        :param proj: The proj of this Assignproj.
        :type proj: int
        """

        self._proj = proj
